@page "/"
@page "/pages/authentication/login"
@using AdminApp.Services.Interfaces;
@using Models
@using MudBlazor;
@layout LoginLayout
@inject NavigationManager NavigationManager;
@inject IAuthService AuthService;
<EditForm Model="@model" OnValidSubmit="HandleLogin">

    <MudText Typo="Typo.h4" GutterBottom="true">Sign In</MudText>

    <MudText>
        Don't have an account? <MudLink Href="/pages/authentication/register">Sign Up</MudLink>
    </MudText>

    <MudTextField T="string" Value="@("admin")" Label="User name" Variant="Variant.Outlined" Class="my-6">
    </MudTextField>

    <MudTextField @bind-Value="@Password" Label="Password" Variant="Variant.Outlined" InputType="@PasswordInput"
        Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />

    <div Class="d-flex justify-space-between align-center">
        <MudCheckBox T="bool" Label="Remember me?" Color="Color.Primary" Class="ml-n1 my-3"></MudCheckBox>
        <MudLink Href="/pages/authentication/forgot-password">Forgot pwd?</MudLink>
    </div>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleLogin" Size="Size.Large" FullWidth="true">
        Sign In
    </MudButton>
</EditForm>
@code {
    LoginRequest model = new LoginRequest();
    string Password { get; set; } = "Admin@123$";
    bool success;
    string[] errors = { };
    MudForm form;
    bool PasswordVisibility;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    async Task HandleLogin()
    {
        var result = await AuthService.Login(model);
        if (result.IsError == false)
        {
            NavigationManager.NavigateTo("/dashboars");
        }
    }

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}
