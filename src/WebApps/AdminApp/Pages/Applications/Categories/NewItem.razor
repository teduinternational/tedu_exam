@page "/app/categories/new"
@using Examination.Shared.Categories
@using Microsoft.Extensions.Logging
@inject ICategoryService CategoryService
@inject ILogger<NewItem> Logger
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager;


<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Create Category</MudText>
<MudGrid>
    <MudItem xs="12" sm="12" md="6">
        <EditForm Model="model" OnValidSubmit="OnValidSubmit">
            <MudCard Elevation="25" Style="height:100%;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Please fill fully information</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent Class="px-5">
                    <DataAnnotationsValidator />
                    <MudTextField Label="Name" Required="true" RequiredError="Name is required" HelperText="Example: C# Programming"
                                  @bind-Value="model.Name" For="@(() => model.Name)" />
                    <MudTextField Label="URL Path" Required="true" RequiredError="Name is required" HelperText="Example: csharp-programming"
                                  @bind-Value="model.UrlPath" For="@(() => model.UrlPath)" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
                </MudCardActions>

            </MudCard>
        </EditForm>
    </MudItem>
</MudGrid>
<MudOverlay Visible="loading" DarkBackground="true" Absolute="true">
    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>
@code {
    bool success;
    bool loading = false;
    [Parameter]
    public string Id { set; get; }
    CreateCategoryRequest model = new CreateCategoryRequest();

    private async Task OnValidSubmit(EditContext context)
    {
        loading = true;
        success = await CategoryService.CreateAsync(model);
        if (success)
        {
            Snackbar.Add("Create new item success", Severity.Success);
            NavigationManager.NavigateTo(UrlConstants.Categories);
        }
        else
        {
            Snackbar.Add("Create action is not success", Severity.Error);
        }
        loading = false;
        StateHasChanged();
    }
}